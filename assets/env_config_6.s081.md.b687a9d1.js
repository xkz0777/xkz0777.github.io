import{_ as s,o as n,c as a,V as l}from"./chunks/framework.e802ca17.js";const b=JSON.parse('{"title":"MIT 6.S081 实验环境配置","description":"","frontmatter":{},"headers":[],"relativePath":"env_config/6.s081.md","filePath":"env_config/6.s081.md","lastUpdated":1684594020000}'),e={name:"env_config/6.s081.md"},p=l(`<h1 id="mit-6-s081-实验环境配置" tabindex="-1">MIT 6.S081 实验环境配置 <a class="header-anchor" href="#mit-6-s081-实验环境配置" aria-label="Permalink to &quot;MIT 6.S081 实验环境配置&quot;">​</a></h1><p>所做实验版本是 FA20</p><h2 id="环境问题" tabindex="-1">环境问题 <a class="header-anchor" href="#环境问题" aria-label="Permalink to &quot;环境问题&quot;">​</a></h2><p>遇到两个问题：</p><ul><li><p><code>make qemu</code> 报错：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#abb2bf;">user/sh.c:58:1: error: infinite recursion detected [-Werror=infinite-recursion]</span></span>
<span class="line"><span style="color:#abb2bf;">58 | runcmd(struct cmd *cmd)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>解决：在 <code>CFLAGS</code> 中加上 <code>-Wno-error=infinite-recursion</code></p></li><li><p><code>make qemu</code> 启动 qemu 时，卡在</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">qemu-system-riscv64</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-machine</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">virt</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-bios</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">none</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-kernel</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">kernel/kernel</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-m</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">128</span><span style="color:#98C379;">M</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-smp</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-nographic</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-drive</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">file=fs.img,if=none,format=raw,id=x0</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-device</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">virtio-blk-device,drive=x0,bus=virtio-mmio-bus.0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>没有出现 <code>$ </code> 这样的 prompt，也无法输入指令。</p><p>解决：按照 <a href="https://pdos.csail.mit.edu/6.S081/2020/tools.html" target="_blank" rel="noreferrer">官方文档</a> 的说法，<code>qemu-system-misc</code> 包经过更新后和 Kernel 不兼容，但按照文档指令 <code>sudo apt-get install qemu-system-misc=1:4.2-3ubuntu6</code> 又找不到包，最后按照 <a href="https://stackoverflow.com/questions/66718225/qemu-system-riscv64-is-not-found-in-package-qemu-system-misc" target="_blank" rel="noreferrer">stackoverflow</a> 的做法，手动编译 qemu 才可。</p><p>跟某佬交流后发现 FA21 版本没有这个问题，应该是已经修复了（21 的 tools 文档也没有介绍这个问题）。</p></li></ul><h2 id="vlab-配置" tabindex="-1">vlab 配置 <a class="header-anchor" href="#vlab-配置" aria-label="Permalink to &quot;vlab 配置&quot;">​</a></h2><p>因为 Mac 手动编译 qemu 还是没法跑起来这个 kernel，选择用 vlab 来完成实验。vlab 的机子之前被我删了又开好多次，现在是个空白环境。</p><p>实验用不到 GUI，主要做一下终端和远程 VSCode 的设置。</p><h3 id="终端配置" tabindex="-1">终端配置 <a class="header-anchor" href="#终端配置" aria-label="Permalink to &quot;终端配置&quot;">​</a></h3><p>首先把默认 shell 换成 zsh：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">sudo</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">apt</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">update</span></span>
<span class="line"><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">sudo</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">apt</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">install</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">zsh</span></span>
<span class="line"><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">chsh</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-s</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">/bin/zsh</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>重启后再连接，<code>echo $SHELL</code> 发现已经变成 zsh。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">sh</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-c</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;$(</span><span style="color:#61AFEF;">curl</span><span style="color:#98C379;"> </span><span style="color:#D19A66;">-fsSL</span><span style="color:#98C379;"> https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>装上后 <code>~/.zshrc</code> 有一百多行，去掉注释只有：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">ZSH</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;</span><span style="color:#E06C75;">$HOME</span><span style="color:#98C379;">/.oh-my-zsh&quot;</span></span>
<span class="line"><span style="color:#E06C75;">ZSH_THEME</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;robbyrussell&quot;</span></span>
<span class="line"><span style="color:#E06C75;">plugins</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">git</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#56B6C2;">source</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">$ZSH</span><span style="color:#98C379;">/oh-my-zsh.sh</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>改成用 [Antigen](<a href="https://github.com/zsh-users/antigen" target="_blank" rel="noreferrer">zsh-users/antigen: The plugin manager for zsh. (github.com)</a>) 来管理 zsh plugin</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">sudo</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">apt</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">install</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">zsh-antigen</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>查了很多文档都没发现 <code>antigen.zsh</code> 在哪，只能</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">sudo</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">find</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">/</span><span style="color:#ABB2BF;"> | </span><span style="color:#61AFEF;">grep</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">antigen.zsh</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>发现在 <code>/usr/share/zsh-antigen/antigen.zsh</code></p><p>把 <code>~/.zshrc</code> 改成：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#56B6C2;">source</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">/usr/share/zsh-antigen/antigen.zsh</span></span>
<span class="line"><span style="color:#61AFEF;">antigen</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">init</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">~/.antigenrc</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>新建 <code>~/.antigenrc</code>：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">antigen</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">use</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">oh-my-zsh</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># Bundles from the default repo.</span></span>
<span class="line"><span style="color:#61AFEF;">antigen</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">bundle</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">git</span></span>
<span class="line"><span style="color:#61AFEF;">antigen</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">bundle</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">command-not-found</span></span>
<span class="line"><span style="color:#61AFEF;">antigen</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">bundle</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">docker</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># Other plugins</span></span>
<span class="line"><span style="color:#61AFEF;">antigen</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">bundle</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">zsh-users/zsh-syntax-highlighting</span></span>
<span class="line"><span style="color:#61AFEF;">antigen</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">bundle</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">zsh-users/zsh-autosuggestions</span></span>
<span class="line"><span style="color:#61AFEF;">antigen</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">bundle</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">zsh-users/zsh-completions</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># Load the theme.</span></span>
<span class="line"><span style="color:#61AFEF;">antigen</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">theme</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">robbyrussell</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># Tell Antigen that you&#39;re done.</span></span>
<span class="line"><span style="color:#61AFEF;">antigen</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">apply</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>之后执行 <code>exec zsh</code> 就完成配置了。</p><h3 id="vscode-配置" tabindex="-1">VSCode 配置 <a class="header-anchor" href="#vscode-配置" aria-label="Permalink to &quot;VSCode 配置&quot;">​</a></h3><p>首先是本机的 <code>~/.ssh/config</code>，加上</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#abb2bf;">Host vlab</span></span>
<span class="line"><span style="color:#abb2bf;">  HostName vlab.ustc.edu.cn</span></span>
<span class="line"><span style="color:#abb2bf;">  IdentityFile ~/.ssh/vlab.pem</span></span>
<span class="line"><span style="color:#abb2bf;">  User ubuntu</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>下载的 <code>vlab.pem</code> 权限需要是 600。</p><p>连上后，首先装 [C/C++](<a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools" target="_blank" rel="noreferrer">C/C++ - Visual Studio Marketplace</a>)、[clangd](<a href="https://marketplace.visualstudio.com/items?itemName=llvm-vs-code-extensions.vscode-clangd" target="_blank" rel="noreferrer">clangd - Visual Studio Marketplace</a>) 插件，为了使用 clangd 还需要装上 clangd language server：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">sudo</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">apt</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">install</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">clangd-12</span></span>
<span class="line"><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">sudo</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">update-alternatives</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">--install</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">/usr/bin/clangd</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">clangd</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">/usr/bin/clangd-12</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;"># 让 clangd-12 变成默认的 clangd</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>之后输入 <code>clangd --version</code> 可以发现 clangd server 已经装上了。</p><p>在全局的 <code>settings.json</code> 里加上：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#98C379;">&quot;clangd.arguments&quot;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;--log=verbose&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;--pretty&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;--all-scopes-completion&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;--completion-style=bundled&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;--cross-file-rename&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;--background-index&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;--clang-tidy&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;--enable-config&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#98C379;">&quot;--compile-commands-dir=build&quot;</span></span>
<span class="line"><span style="color:#ABB2BF;">],</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>同时新建 clangd 的 <code>config.yaml</code> 文件，Windows 在 <code>%LocalAppData%\\clangd\\config.yaml</code>，MacOS 在 <code>~/Library/Preferences/clangd/config.yaml</code>，Linux 在 <code>~/.config/clangd/config.yaml</code>。</p><p>内容为</p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E06C75;">Diagnostics</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">ClangTidy</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">Add</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&quot;*&quot;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">Remove</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#98C379;">altera*</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#98C379;">llvmlibc-restrict-system-libc-headers</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#98C379;">cppcoreguidelines-pro-bounds-pointer-arithmetic</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#98C379;">cppcoreguidelines-pro-type-vararg</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#98C379;">cppcoreguidelines-avoid-magic-numbers</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#98C379;">cppcoreguidelines-avoid-non-const-global-variables</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#98C379;">hicpp-vararg</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#98C379;">llvmlibc-callee-namespace</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#98C379;">llvmlibc-implementation-in-namespace</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#98C379;">modernize-use-trailing-return-type</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#98C379;">readability-identifier-length</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#98C379;">readability-magic-numbers</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#98C379;">readability-isolate-declaration</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#98C379;">llvmlibc-restrict-system-libc-headers</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#98C379;">google-objc-function-naming</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#98C379;">bugprone-easily-swappable-parameters</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span><span style="color:#98C379;">google-readability-todo</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      ]</span></span>
<span class="line"><span style="color:#E06C75;">Index</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">Background</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">Build</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>重新连接，可以发现已经有了报错提示。由于项目是通过 Makefile 组织的，还需要生成 <code>compile_commands.json</code> 才能识别项目结构。选用 <a href="https://github.com/rizsotto/Bear" target="_blank" rel="noreferrer">Bear</a>。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">sudo</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">apt</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">install</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">bear</span></span>
<span class="line"><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">make</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">clean</span></span>
<span class="line"><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">bear</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">--</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">make</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">qemu</span><span style="color:#ABB2BF;"> </span><span style="color:#7F848E;font-style:italic;"># 之后直接按 ctrl-a x 退出即可生成</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>同时添加 <code>~/.clang-format</code> 文件，其中需要设置 <code>SortIncludes: false</code>，防止编译报错。</p><h2 id="gdb-调试" tabindex="-1">GDB 调试 <a class="header-anchor" href="#gdb-调试" aria-label="Permalink to &quot;GDB 调试&quot;">​</a></h2><h3 id="两个终端调试" tabindex="-1">两个终端调试 <a class="header-anchor" href="#两个终端调试" aria-label="Permalink to &quot;两个终端调试&quot;">​</a></h3><p>首先让 gdb 启动时加载 <code>.gdbinit</code> 文件：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">echo</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&quot;add-auto-load-safe-path ~/xv6-labs-2020/.gdbinit&quot;</span><span style="color:#ABB2BF;"> &gt;&gt; </span><span style="color:#98C379;">~/.gdbinit</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>之后在一个终端中</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">make</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">qemu-gdb</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>另一个终端</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#61AFEF;">$</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">gdb-multiarch</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>之后就可以调试了，例如调试 <code>ls</code> 程序，就是</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#abb2bf;">file user/_ls</span></span>
<span class="line"><span style="color:#abb2bf;">b main</span></span>
<span class="line"><span style="color:#abb2bf;">c</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="vscode-调试" tabindex="-1">VSCode 调试 <a class="header-anchor" href="#vscode-调试" aria-label="Permalink to &quot;VSCode 调试&quot;">​</a></h3><p>首先注释掉 <code>.gdbinit</code> 中 <code>target remote 127.0.0.1:26000</code> 一行，防止 VSCode 配置和这个重复。之后创建 <code>.vscode</code> 下的</p><p><code>launch.json</code>：</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">&quot;version&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;0.2.0&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">&quot;configurations&quot;</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">        {</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E06C75;">&quot;name&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;xv6debug&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E06C75;">&quot;type&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;cppdbg&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E06C75;">&quot;request&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;launch&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E06C75;">&quot;program&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;\${workspaceFolder}/kernel/kernel&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E06C75;">&quot;stopAtEntry&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E06C75;">&quot;cwd&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;\${workspaceFolder}&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E06C75;">&quot;miDebuggerServerAddress&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;127.0.0.1:26000&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E06C75;">&quot;miDebuggerPath&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;gdb-multiarch&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">            </span><span style="color:#E06C75;">&quot;MIMode&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;gdb&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    ]</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>之后在终端 <code>make qemu-gdb</code>，并在 VSCode 左侧工具栏选择 &quot;Run and Debug&quot;，左上角选取 &quot;xv6debug&quot;，并点绿色的运行按钮，即可在 VSCode 里调试内核代码。</p><p>此时在用户态代码打断点还无法调试，为了调试用户态代码，需要在 DEBUG CONSOLE（调试控制台）中载入对应的文件。例如，如果要调试 <code>user/ls.c</code>，输入 <code>-exec file user/_ls</code> 即可。</p><h2 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接&quot;">​</a></h2><p><a href="https://stackoverflow.com/questions/66390948/make-qemu-on-xv6-riscv-gets-stucked-at-qemu-system-riscv64-command" target="_blank" rel="noreferrer">make qemu on xv6-riscv gets stucked at qemu-system-riscv64 ... command - Stack Overflow</a></p><p><a href="https://stackoverflow.com/questions/66718225/qemu-system-riscv64-is-not-found-in-package-qemu-system-misc" target="_blank" rel="noreferrer">xv6 - qemu-system-riscv64 is not found in package qemu-system-misc - Stack Overflow</a></p><p><a href="https://taylover2016.github.io/%E6%96%B0%E6%9C%BA%E5%99%A8%E4%B8%8A%E6%89%8B%E6%8C%87%E5%8D%97%EF%BC%88%E6%96%B0%E6%89%8B%E5%90%91%EF%BC%89/index.html" target="_blank" rel="noreferrer">新机器上手指南（新手向） | TS的十三小屋 (taylover2016.github.io)</a></p><p><a href="https://zhangjk98.xyz/6.S081-VSCode-prepare-and-kernel-debugging/" target="_blank" rel="noreferrer">6.S081的调试和VSCode环境配置 | 止息的博客 (zhangjk98.xyz)</a></p><p><a href="https://zhuanlan.zhihu.com/p/342402097" target="_blank" rel="noreferrer">Fall2020/6.S081-如何在 QEMU 中使用 gdb - 知乎 (zhihu.com)</a></p><p><a href="https://www.cnblogs.com/KatyuMarisaBlog/p/13727565.html" target="_blank" rel="noreferrer">MIT 6.S081 xv6调试不完全指北 - KatyuMarisa - 博客园 (cnblogs.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/501901665" target="_blank" rel="noreferrer">从零开始使用Vscode调试XV6 - 知乎 (zhihu.com)</a></p>`,64),o=[p];function r(c,t,i,B,y,d){return n(),a("div",null,o)}const m=s(e,[["render",r]]);export{b as __pageData,m as default};
